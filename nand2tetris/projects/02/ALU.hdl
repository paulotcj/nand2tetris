// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * In addition, the ALU computes two 1-bit outputs:
 * if the ALU output == 0, zr is set to 1; otherwise zr is set to 0;
 * if the ALU output < 0, ng is set to 1; otherwise ng is set to 0.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not
// if (out == 0) set zr = 1
// if (out < 0) set ng = 1

//Implementation by: Paulo Costa 2020/12

CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16], // 16-bit output
        zr, // 1 if (out == 0), 0 otherwise - is the output zero? if yes then zr =1
        ng; // 1 if (out < 0),  0 otherwise - is the output negative? if yes then ng = 1

    PARTS:
    // Put you code here:


    Mux16(a=x,b[0..15]=false,sel=zx,out= muxZeroX );             // select wether to transform X into zeroes (ZX instruction)
    Not16(in = muxZeroX , out = notX );                          // muxZeroX is transformed into notX
    Mux16(a = muxZeroX , b = notX , sel = nx , out = transInX ); // select between the output from notX or muxZeroX
   
    Mux16(a=y,b[0..15]=false,sel=zy,out= muxZeroY ); 
    Not16(in = muxZeroY , out = notY ); 
    Mux16(a = muxZeroY , b = notY , sel = ny , out = transInY ); 


    Add16(a = transInX , b = transInY , out = add16Out );
    And16(a = transInX , b = transInY , out = and16Out );
    Mux16(a = and16Out , b = add16Out , sel = f , out = outF ); 

    Not16(in = outF , out =  notF ); 
    Mux16(a = outF , b = notF , sel = no , out=out, out[15]=outNeg, out[0..7]=out0to7, out[8..15]=out8to15 ); 


    Or8Way(in = out0to7 ,  out = Or8WayOut1 );
    Or8Way(in = out8to15 , out = Or8WayOut2 );
    Or(a = Or8WayOut1 , b = Or8WayOut2 , out = zrTemp );
    Not(in = zrTemp , out = zr );

    And(a=outNeg, b=true, out=ng);



}






